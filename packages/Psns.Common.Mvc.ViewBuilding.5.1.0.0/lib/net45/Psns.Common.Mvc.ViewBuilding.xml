<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Psns.Common.Mvc.ViewBuilding</name>
    </assembly>
    <members>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Adapters.RequestContextAdapter">
            <summary>
            An adapter for the HttpContext.Current.Request.RequestContext to assist with testing
            </summary>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.Adapters.RequestContextAdapter.Context">
            <summary>
            Unless explicitly set, HttpContext.Current.Request.RequestContext is returned
            </summary>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Attributes.InputPropertyType">
            <summary>
            Represents types of properties that will be displayed on an update view
            </summary>
        </member>
        <member name="F:Psns.Common.Mvc.ViewBuilding.Attributes.InputPropertyType.Basic">
            <summary>
            An example is a bool
            </summary>
        </member>
        <member name="F:Psns.Common.Mvc.ViewBuilding.Attributes.InputPropertyType.String">
            <summary>
            Represents a simple text box input
            </summary>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Attributes.ViewComplexPropertyAttribute">
            <summary>
            Provides information needed by the CrudViewBuilder to map reference type attributes
            </summary>
        </member>
        <member name="F:Psns.Common.Mvc.ViewBuilding.Attributes.ViewComplexPropertyAttribute.LabelPropertyName">
            <summary>
            The name of the property that will be used as the label when mapping
            </summary>
        </member>
        <member name="F:Psns.Common.Mvc.ViewBuilding.Attributes.ViewComplexPropertyAttribute.ValuePropertyName">
            <summary>
            The name of the property that will be used as the value when mapping
            </summary>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.Attributes.ViewComplexPropertyAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="labelPropertyName">The name of the property that will be used as the label when mapping</param>
            <param name="valuePropertyName">The name of the property that will be used as the value when mapping</param>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Attributes.ViewComplexPropertyForeignKeyAttribute">
            <summary>
            Annotates the foreign key id used to represent a singular navigation property
            </summary>
        </member>
        <member name="F:Psns.Common.Mvc.ViewBuilding.Attributes.ViewComplexPropertyForeignKeyAttribute.ForPropertyName">
            <summary>
            The name of the property that this is a foreign key for
            </summary>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.Attributes.ViewComplexPropertyForeignKeyAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="forPropertyName">The name of the property that this is a foreign key for</param>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Attributes.DisplayViewTypes">
            <summary>
            Used to annotate which view a property should be displayed on
            </summary>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Attributes.ViewDisplayablePropertyAttribute">
            <summary>
            Configure how a property should be displayed by the View Mapper
            </summary>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.Attributes.ViewDisplayablePropertyAttribute.#ctor(Psns.Common.Mvc.ViewBuilding.Attributes.DisplayViewTypes[])">
            <summary>
            Constructor
            </summary>
            <param name="viewTypes">Which views this property should be displayed on</param>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Attributes.ViewUpdatablePropertyAttribute">
            <summary>
            Used to display a property on create and update views
            </summary>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Controllers.IDeleteable`1">
            <summary>
            Defines an IRepositoryController that can delete
            </summary>
            <typeparam name="T">A type that implements INameable and IIdentifiable</typeparam>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.Controllers.IDeleteable`1.Delete(System.Int32)">
            <summary>
            Defines a delete method
            </summary>
            <param name="id">The id of the object to delete</param>
            <returns>An ActionResult</returns>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Controllers.DeleteableExtensions">
            <summary>
            Extensions for IDeleteable methods
            </summary>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.Controllers.DeleteableExtensions.Delete``1(Psns.Common.Mvc.ViewBuilding.Controllers.IDeleteable{``0},System.Int32)">
            <summary>
            Validates the AntiForgery token and calls delete for the id on the Repository
            </summary>
            <typeparam name="T">A type that implements INameable and IIdentifiable</typeparam>
            <param name="controller">The controller being extended</param>
            <param name="id">The id of the object to be deleted</param>
            <returns>A redirect to the Index</returns>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Controllers.IIndexController">
            <summary>
            Defines an api controller for an Index view
            </summary>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.Controllers.IIndexController.GetFilterOptions(System.String)">
            <summary>
            Defines a method that returns filter options for an Index view
            </summary>
            <param name="modelName">The name of the model from which the filter options are generated</param>
            <returns>The filter options</returns>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Controllers.IIndexControllerExtensions">
            <summary>
            Extensions for IIndexController to enable re-usability
            </summary>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.Controllers.IIndexControllerExtensions.GetFilterOptions(Psns.Common.Mvc.ViewBuilding.Controllers.IIndexController,System.String,Psns.Common.Mvc.ViewBuilding.ViewBuilders.ICrudViewBuilder,Psns.Common.Mvc.ViewBuilding.ViewModels.IFilterOptionVisitor[])">
            <summary>
            Calls the GetIndexFilterOptions on the ViewBuilder and returns the results
            </summary>
            <param name="controller"></param>
            <param name="modelName">The Fully Qualified Assembly Name of the model</param>
            <param name="viewBuilder">An ICrudViewBuilder implementation</param>
            <param name="visitors">Any IFilterOptionVisitors to be passed to the ViewBuilder</param>
            <returns></returns>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Controllers.IndexController">
            <summary>
            An Api controller for the Index view
            </summary>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.Controllers.IndexController.#ctor(Psns.Common.Mvc.ViewBuilding.ViewBuilders.ICrudViewBuilder)">
            <summary>
            Constructor
            </summary>
            <param name="viewBuilder">The viewBuilder to retrieve the view models from</param>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.Controllers.IndexController.GetFilterOptions(System.String)">
            <summary>
            Returns the options used to populate the filter drop downs on the Index view
            </summary>
            <param name="modelName">The Fully Qualified Assembly Name of the class whose properties are used in the Index View</param>
            <returns>A collection of FilterOption objects</returns>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.ViewBuilders.CrudViewBuilder.GetIndexFilterOptions``1(Psns.Common.Mvc.ViewBuilding.ViewModels.IFilterOptionVisitor[])">
            <summary>
            Used to populate the index view filter menus. If an IFilterOptionsVisitor sets an item to null,
            then it will not be included in the results.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filterOptionVisitors"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Psns.Common.Mvc.ViewBuilding.Entities.CrudEntityExtensions.GetEnumerableProperties(System.Object)" -->
        <member name="M:Psns.Common.Mvc.ViewBuilding.Entities.CrudEntityExtensions.GetComplexPropertyNames(System.Linq.IOrderedEnumerable{System.Reflection.PropertyInfo})">
            <summary>
            Gets all property names of an object that are decorated with ViewComplexPropertyAttribute or ViewComplexPropertyForeignKeyAttribute.
            </summary>
            <param name="properties">A list of PropertyInfo object to query</param>
            <returns>string[]</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Psns.Common.Mvc.ViewBuilding.Entities.CrudEntityExtensions.GetUpdateProperties(System.Type)" -->
        <member name="M:Psns.Common.Mvc.ViewBuilding.Entities.CrudEntityExtensions.GetPropertyOrder(System.Reflection.PropertyInfo,System.Int32)">
            <summary>
            Gets the order of a given PropertyInfo as annotated by a DisplayAttribute.Order.
            </summary>
            <param name="property">The given PropertyInfo</param>
            <param name="displayOrderCount">An integer with a pre-existing order value.</param>
            <returns>int</returns>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Entities.INameable">
            <summary>
            Represents an object with a string property called Name
            </summary>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.Entities.INameable.Name">
            <summary>
            The Name of the INameable
            </summary>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.ViewModels.IDetailsViewVisitor">
            <summary>
            Defines a visitor for the DetailsView model
            </summary>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.ViewModels.TableModel.ITableVisitor">
            <summary>
            Defines a visitor for the Table view model
            </summary>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.ViewModels.TableModel.ITableVisitor.Visit(Psns.Common.Mvc.ViewBuilding.ViewModels.TableModel.Table)">
            <summary>
            Defines a method that visits the Table
            </summary>
            <param name="table">Table view model</param>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.ViewModels.TableModel.ITableVisitor.Visit(Psns.Common.Mvc.ViewBuilding.ViewModels.TableModel.Row)">
            <summary>
            Defines a method that visits each Row of a Table
            </summary>
            <param name="row">A Row of the Table</param>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.ViewModels.TableModel.ITableVisitor.Visit(Psns.Common.Mvc.ViewBuilding.ViewModels.TableModel.Column)">
            <summary>
            Defines a method that visits each Column of each Row of a Table
            </summary>
            <param name="column">A Column of a Row of a Table</param>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.ViewModels.IDetailsViewVisitor.Visit(Psns.Common.Mvc.ViewBuilding.ViewModels.DetailsView)">
            <summary>
            Defines a method that receives the DetailsView being visited
            </summary>
            <param name="indexView">The DetailsView being visited</param>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.ViewModels.IFilterOptionVisitor.Visit(Psns.Common.Persistence.Definitions.IIdentifiable)">
            <summary>
            Defines a method that visits an IIdentifiable type
            </summary>
            <param name="item">The item to visit</param>
            <returns>Returns a potentially modified version of item</returns>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.ViewModels.IVisitable.Source">
            <summary>
            The object from which the element was built
            </summary>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.ViewModels.DetailsView">
            <summary>
            A View with a Table that is used for a typical details view page
            </summary>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.ViewModels.DetailsView.Accept(Psns.Common.Mvc.ViewBuilding.ViewModels.IDetailsViewVisitor)">
            <summary>
            Accept an IDetailsViewVisitor and pass it this
            </summary>
            <param name="visitor">IDetailsViewVisitor</param>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.ViewModels.IIndexViewVisitor">
            <summary>
            Defines a visitor for the IndexView model
            </summary>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.ViewModels.IIndexViewVisitor.Visit(Psns.Common.Mvc.ViewBuilding.ViewModels.IndexView)">
            <summary>
            Defines a method that receives the IndexView being visited
            </summary>
            <param name="indexView">The IndexView being visited</param>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.ViewModels.IndexView">
            <summary>
            Contains the element for a common index view
            </summary>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.ViewModels.IndexView.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="modelName">The name of the model being represented in the index view</param>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.ViewModels.IndexView.Accept(Psns.Common.Mvc.ViewBuilding.ViewModels.IIndexViewVisitor)">
            <summary>
            Accept an IIndexViewVisitor and pass it this
            </summary>
            <param name="visitor">IIndexViewVisitor</param>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.ViewModels.IndexView.CreateButton">
            <summary>
            Represents the Create New Item button on the Index View
            </summary>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Menu.GlobalMenu">
            <summary>
            Provides top-level menu content to be rendered in PSNSLayout
            </summary>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.Menu.GlobalMenu.GlobalMenuItems">
            <summary>
            Provides content for top-level drop-down menus
            </summary>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.Menu.GlobalMenu.ContextMenu">
            <summary>
            Provides application specific menu items to be rendered in PSNSLayout ContextActions section
            </summary>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Menu.IContextMenu">
            <summary>
            Defines the application specific context menu area
            </summary>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.Menu.IContextMenu.Title">
            <summary>
            The title of the application
            </summary>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.Menu.IContextMenuWithDropDowns.MenuItems">
            <summary>
            Defines application specific drop-down menus
            </summary>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Menu.IMenuItem">
            <summary>
            Defines a drop-down menu
            </summary>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.Menu.IMenuItem.RootNode">
            <summary>
            The root of a drop-down menu
            </summary>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Menu.MenuNode">
            <summary>
            A node within a drop-down menu
            </summary>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.Menu.MenuNode.Text">
            <summary>
            Text to be displayed
            </summary>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.Menu.MenuNode.Title">
            <summary>
            Text for Html Title
            </summary>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.Menu.MenuNode.Url">
            <summary>
            Url to link to
            </summary>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.Menu.MenuNode.IconHtmlClasses">
            <summary>
            Html classes used to display an icon instead of text
            </summary>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.Menu.MenuNode.Children">
            <summary>
            Child nodes to be display as a sub-menu to this node
            </summary>
        </member>
    </members>
</doc>
